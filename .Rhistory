#/Users/jiangweixuan/Desktop/a_matching/Student_Full_List.csv
# 运行前请先安装必要包：install.packages(c("pdftools","stringr","dplyr","tibble"))
library(pdftools)
install.packages(c("pdftools","stringr","dplyr","tibble"))
#/Users/jiangweixuan/Desktop/a_matching/Student_Full_List.csv
# 运行前请先安装必要包：install.packages(c("pdftools","stringr","dplyr","tibble"))
library(pdftools)
library(stringr)
library(dplyr)
library(tibble)
# —— 1. 配置 PDF 文件夹路径 ——
# 请修改为你本地存放 40 篇 PDF 的目录
pdf_dir <- "/Users/jiangweixuan/Desktop/extract_court/CaseAbalysis_Task"
pdf_files <- list.files(pdf_dir, pattern = "\\.pdf$", full.names = TRUE)
# —— 2. 定义一个函数，处理单个 PDF ——
extract_case <- function(pdf_path) {
# 2.1 提取全文并按页合并
pages <- pdf_text(pdf_path)
full_text <- paste(pages, collapse = "\n")
# 2.2 按行拆分并去除首尾空白
lines <- str_split(full_text, "\n")[[1]] %>% str_trim()
# 2.3 抽取 title：第一行非空
first_nonempty <- which(lines != "")[1]
title <- if (!is.na(first_nonempty)) lines[first_nonempty] else NA_character_
# 2.4 查找“Background”或“Description”节起始位置
header_idx <- which(str_detect(lines, regex("^(Background|Description)\\s*$", ignore_case = TRUE)))
if (length(header_idx) > 0) {
start_idx <- header_idx[1]
# 2.5 从 start_idx 向下，找到下一个大写标题行（假定所有大写且只有字母和空格的行为新节）
next_hdrs <- which(
seq_along(lines) > start_idx &
str_detect(lines, "^[A-Z][A-Z\\s]+$") &
nchar(lines) > 2
)
end_idx <- if (length(next_hdrs) > 0) next_hdrs[1] - 1 else length(lines)
background_lines <- lines[(start_idx+1):end_idx]
} else {
# 若找不到分节标题，将全文当作背景
background_lines <- lines
}
background <- paste(background_lines, collapse = "\n")
tibble(
id         = tools::file_path_sans_ext(basename(pdf_path)),
title      = title,
background = background
)
}
# —— 3. 批量处理并合并结果 ——
all_cases <- pdf_files %>%
lapply(extract_case) %>%
bind_rows()
# —— 4. 输出为 CSV ——
output_path <- "cases_background.csv"
write.csv(all_cases, output_path, row.names = FALSE, fileEncoding = "UTF-8")
message("已生成 CSV：", normalizePath(output_path))
